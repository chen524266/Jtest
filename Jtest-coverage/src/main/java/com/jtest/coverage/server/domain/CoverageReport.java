package com.jtest.coverage.server.domain;import com.Jtest.common.annotation.Excel;import com.Jtest.common.core.domain.BaseEntity;import lombok.Builder;import lombok.Data;import org.apache.commons.lang3.builder.ToStringBuilder;import org.apache.commons.lang3.builder.ToStringStyle;/** * 代码覆盖率服务对象 coverage_report * * @author Jtest * @date 2024-09-05 */@Builder@Datapublic class CoverageReport extends BaseEntity{    private static final long serialVersionUID = 1L;    /** 报告id */    private Integer reportId;    /** 应用名称 */    @Excel(name = "应用名称")    private String appName;    /** 仓库地址 */    @Excel(name = "仓库地址")    private String repositoryUrl;    /** 起始版本 */    @Excel(name = "起始版本")    private String versionStart;    /** 当前版本 */    @Excel(name = "当前版本")    private String versionNow;    /** exec文件路径 */    @Excel(name = "exec文件路径")    private String exec;    /** report文件夹路径 */    @Excel(name = "report文件夹路径")    private String reportDir;    /** 指令覆盖率 */    @Excel(name = "指令覆盖率")    private String instructionCounter;    /** 分支覆盖率 */    @Excel(name = "分支覆盖率")    private String branchCounter;    /** 行覆盖率 */    @Excel(name = "行覆盖率")    private String lineCounter;    /** 类覆盖率 */    @Excel(name = "类覆盖率")    private String classCounter;    private String createBy;    /** 报告url地址 */    @Excel(name = "报告url地址")    private String reportHref;    /** 环境配置id */    @Excel(name = "环境配置id")    private Integer configId;    /** class文件路径 */    @Excel(name = "class文件路径")    private String classFiles;    /** 源码文件路径 */    @Excel(name = "源码文件路径")    private String sourceFiles;    /** 差异文件路径 */    @Excel(name = "差异文件路径")    private String diffCodeFiles;    @Override    public String toString() {        return new ToStringBuilder(this,ToStringStyle.MULTI_LINE_STYLE)                .append("reportId", getReportId())                .append("appName", getAppName())                .append("repositoryUrl", getRepositoryUrl())                .append("versionStart", getVersionStart())                .append("versionNow", getVersionNow())                .append("exec", getExec())                .append("reportDir", getReportDir())                .append("instructionCounter", getInstructionCounter())                .append("branchCounter", getBranchCounter())                .append("lineCounter", getLineCounter())                .append("classCounter", getClassCounter())                .append("createBy", getCreateBy())                .append("reportHref", getReportHref())                .append("configId", getConfigId())                .append("classFiles", getClassFiles())                .append("sourceFiles", getSourceFiles())                .append("createTime", getCreateTime())                .append("updateTime", getUpdateTime())                .toString();    }}