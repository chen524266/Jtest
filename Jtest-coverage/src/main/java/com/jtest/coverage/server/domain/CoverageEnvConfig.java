package com.jtest.coverage.server.domain;import com.Jtest.common.annotation.Excel;import com.Jtest.common.core.domain.BaseEntity;import lombok.Data;/** * 环境配置对象 coverage_env_config * * @author Jtest * @date 2024-09-02 */@Datapublic class CoverageEnvConfig extends BaseEntity {    private static final long serialVersionUID = 1L;    /**     * 主键id     */    private Integer configId;    /**     * 客户端名称     */    @Excel(name = "客户端名称")    private String clientName;    /**     * 应用名称     */    @Excel(name = "应用名称")    private String appName;    /**     * ip地址     */    @Excel(name = "ip地址")    private String ip;    /**     * 端口     */    @Excel(name = "端口")    private String port;    /**     * 仓库地址     */    @Excel(name = "仓库地址")    private String repositoryUrl;    /**     * 仓库用户名     */    @Excel(name = "仓库用户名")    private String name;    /**     * 仓库用户地址     */    @Excel(name = "仓库用户地址")    private String password;    /**     * 全量or增量     */    @Excel(name = "全量or增量")    private String coverageType;    /**     * 起始版本     */    @Excel(name = "起始版本")    private String versionStart;    /**     * 当前版本     */    @Excel(name = "当前版本")    private String versionNow;    /**     * 是否启用定时任务,0为false1为true     */    @Excel(name = "是否启用定时任务,0为false1为true")    private Long enableScheduled;    /**     * corn表达式     */    @Excel(name = "corn表达式")    private String corn;    /**     * 最近一次的报告id     */    @Excel(name = "最近一次的报告id")    private Integer LastReportId;    /**     * 最近一次的报告目录     */    @Excel(name = "最近一次的报告目录")    private String lastReportDir;    /**     * class文件相对路径，多个目录用逗号分隔     */    @Excel(name = "class文件所在目录，多个目录用逗号分隔")    private String classFiles;    /**     * 源码文件相对路径，多个目录用逗号分隔     */    @Excel(name = "源码文件所在目录，多个目录用逗号分隔")    private String sourceFiles;    private String branch;    private String gitSshPrivateKey;    private String oldCodeFile;    private String nowCodeFile;    private String diffCodeFile;    private String execFile;}